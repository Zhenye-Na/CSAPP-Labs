	.file	"480-charbuf.c"
	.text
	.globl	len
	.type	len, @function
len:
	movl	$0, %eax
	movq	$-1, %rcx
	repnz; scasb
	notq	%rcx
	leaq	-1(%rcx), %rax
	ret
	.size	len, .-len
	.section	.rodata.str1.1,"aMS",@progbits,1
	.string	"%ld"
	.text
	.globl	iptoa
	.type	iptoa, @function
iptoa:
	subq	$8, %rsp
	movq	(%rsi), %r8
	movq	$-1, %rdx
	movl	$1, %esi
	movl	$0, %eax
	call	__sprintf_chk
	addq	$8, %rsp
	ret
	.size	iptoa, .-iptoa
	.globl	intlen
	.type	intlen, @function
/* $begin 480-charbuf-sp-s 32 */
# int intlen(long x)
# x in \rdireg{}
intlen:
	subq	$56, %rsp
	movq	%fs:40, %rax
	movq	%rax, 40(%rsp) ##line:asm:intlen:sp:canary
	xorl	%eax, %eax
	movq	%rdi, 8(%rsp) 
	leaq	8(%rsp), %rsi ##line:asm:intlen:sp:v
	leaq	16(%rsp), %rdi ##line:asm:intlen:sp:buf
	call	iptoa
/* $end 480-charbuf-sp-s 32 */
	leaq	16(%rsp), %rdi
	call	len
	movq	40(%rsp), %rdx
	xorq	%fs:40, %rdx
	je	.L5
	call	__stack_chk_fail
.L5:
	addq	$56, %rsp
	ret
	.size	intlen, .-intlen
	.section	.rodata.str1.1
	.string	"%d"
	.text
	.globl	itoa
	.type	itoa, @function
itoa:
	subq	$8, %rsp
	movl	%esi, %r8d
	movq	$-1, %rdx
	movl	$1, %esi
	movl	$0, %eax
	call	__sprintf_chk
	addq	$8, %rsp
	ret
	.size	itoa, .-itoa
	.globl	storeint
	.type	storeint, @function
storeint:
	movl	%edi, (%rsi)
	ret
	.size	storeint, .-storeint
	.globl	intlen2
	.type	intlen2, @function
intlen2:
	subq	$56, %rsp
	movq	%fs:40, %rax
	movq	%rax, 40(%rsp)
	xorl	%eax, %eax
	leaq	12(%rsp), %rsi
	call	storeint
	movl	12(%rsp), %esi
	leaq	16(%rsp), %rdi
	call	itoa
	leaq	16(%rsp), %rdi
	call	len
	movq	40(%rsp), %rdx
	xorq	%fs:40, %rdx
	je	.L11
	call	__stack_chk_fail
.L11:
	addq	$56, %rsp
	ret
	.size	intlen2, .-intlen2
	.ident	"GCC: (Ubuntu 4.8.1-2ubuntu1~12.04) 4.8.1"
	.section	.note.GNU-stack,"",@progbits
