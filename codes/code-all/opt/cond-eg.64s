.Ltext0:
minmax1:
	testq	%rdx, %rdx
	jle	.L1
	movl	$0, %eax
.L4:
	movq	(%rdi,%rax,8), %rcx
	movq	(%rsi,%rax,8), %r8
	cmpq	%r8, %rcx
	jle	.L3
	movq	%r8, (%rdi,%rax,8)
	movq	%rcx, (%rsi,%rax,8)
.L3:
	addq	$1, %rax
	cmpq	%rdx, %rax
	jne	.L4
.L1:
	rep; ret
minmax2:
	testq	%rdx, %rdx
	jle	.L5
	movl	$0, %eax
.L7:
	movq	(%rsi,%rax,8), %rcx
	movq	(%rdi,%rax,8), %r8
	cmpq	%rcx, %r8
	movq	%rcx, %r9
	cmovle	%r8, %r9
	movq	%r9, (%rdi,%rax,8)
	cmovge	%r8, %rcx
	movq	%rcx, (%rsi,%rax,8)
	addq	$1, %rax
	cmpq	%rdx, %rax
	jne	.L7
.L5:
	rep; ret
init:
	cmpl	$1, %edi
	ja	.L9
	movl	$0, %eax
	movl	%edi, %ecx
	movl	$1, %edx
	subl	%edi, %edx
.L11:
	movq	%rcx, a2(,%rax,8)
	movq	%rcx, a1(,%rax,8)
	movq	%rdx, b2(,%rax,8)
	movq	%rdx, b1(,%rax,8)
	addq	$1, %rax
	cmpq	$65536, %rax
	jne	.L11
	rep; ret
.L9:
	cmpl	$2, %edi
	jne	.L12
	movl	$0, %eax
	movl	$1, %ecx
.L13:
	movq	%rax, %rdx
	andl	$1, %edx
	movq	%rdx, a2(,%rax,8)
	movq	%rdx, a1(,%rax,8)
	movq	%rcx, %rsi
	subq	%rdx, %rsi
	movq	%rsi, b2(,%rax,8)
	movq	%rsi, b1(,%rax,8)
	addq	$1, %rax
	cmpq	$65536, %rax
	jne	.L13
	rep; ret
.L12:
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	call	srandom
	movl	$0, %ebx
.L14:
	call	random
	movq	%rax, %rbp
	call	random
	movq	%rbp, a2(,%rbx,8)
	movq	%rbp, a1(,%rbx,8)
	movq	%rax, b2(,%rbx,8)
	movq	%rax, b1(,%rbx,8)
	addq	$1, %rbx
	cmpq	$65536, %rbx
	jne	.L14
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	ret

run:
	pushq	%r13
	pushq	%r12
	pushq	%rbp
	pushq	%rbx
	subq	$24, %rsp
	movq	%rsi, %r12
	testq	%rsi, %rsi
	jle	.L17
	movq	%rdi, %rbx
	movl	%edx, %r13d
	movl	$0, %ebp
.L19:
	movl	%r13d, %edi
	call	init
	movl	$0, %eax
	call	start_counter
	movq	%rbx, %rdx
	movl	$b1, %esi
	movl	$a1, %edi
	call	minmax1
	movl	$0, %eax
	call	get_counter
	vmovsd	%xmm0, 8(%rsp)
	movl	$0, %eax
	call	start_counter
	movq	%rbx, %rdx
	movl	$b2, %esi
	movl	$a2, %edi
	call	minmax2
	movl	$0, %eax
	call	get_counter
	vcvtsi2sdq	%rbx, %xmm1, %xmm1
	vmovsd	8(%rsp), %xmm3
	vdivsd	%xmm1, %xmm3, %xmm2
	vdivsd	%xmm1, %xmm0, %xmm1
	vmovapd	%xmm2, %xmm0
	movq	%rbx, %rdx
	movl	$.LC0, %esi
	movl	$1, %edi
	movl	$2, %eax
	call	__printf_chk
	addq	$1, %rbp
	cmpq	%r12, %rbp
	jne	.L19
.L17:
	addq	$24, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	ret

main:
	pushq	%r13
	pushq	%r12
	pushq	%rbp
	pushq	%rbx
	subq	$8, %rsp
	movl	%edi, %ebx
	movq	%rsi, %r13
	movl	$65536, %ebp
	cmpl	$1, %edi
	jle	.L22
	movq	8(%rsi), %rdi
	movl	$10, %edx
	movl	$0, %esi
	call	strtol
	movl	%eax, %ebp
.L22:
	movl	$3, %r12d
	cmpl	$2, %ebx
	jle	.L23
	movq	16(%r13), %rdi
	movl	$10, %edx
	movl	$0, %esi
	call	strtol
	movl	%eax, %r12d
.L23:
	movl	$1, %edx
	cmpl	$3, %ebx
	jle	.L24
	movq	24(%r13), %rdi
	movb	$10, %dl
	movl	$0, %esi
	call	strtol
	movl	%eax, %edx
.L24:
	movslq	%r12d, %rsi
	movslq	%ebp, %rdi
	call	run
	movl	$0, %eax
	addq	$8, %rsp
	popq	%rbx
	popq	%rbp
	popq	%r12
	popq	%r13
	ret

.Letext0:
.Ldebug_info0:
.Ldebug_abbrev0:
.Ldebug_loc0:
.Ldebug_line0:
